<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Farseerfc的小窝 - life</title><link href="//farseerfc.me/zhs/" rel="alternate"></link><link href="//farseerfc.me/feeds/tag-life.atom.xml" rel="self"></link><id>//farseerfc.me/zhs/</id><updated>2019-02-24T08:37:00+09:00</updated><entry><title>东方歌词翻译迁移至 sak.uy</title><link href="//farseerfc.me/zhs/move-lyrics-to-sakuy.html" rel="alternate"></link><published>2019-02-24T08:37:00+09:00</published><updated>2019-02-24T08:37:00+09:00</updated><author><name>farseerfc</name></author><id>tag:farseerfc.me,2019-02-24:/zhs/move-lyrics-to-sakuy.html</id><summary type="html">&lt;p&gt;最近几个月在这个博客发了不少歌词翻译 &lt;del&gt;似乎有要转型成音乐博主的趋势&lt;/del&gt; ，前段时间买了个新域名
&lt;a class="reference external" href="https://sak.uy/"&gt;sak.uy&lt;/a&gt; ，准备专门用来放这些东方歌曲的歌词翻译，于是分设了单独的博客「
&lt;a class="reference external" href="https://sak.uy/"&gt;Sakuya的音乐盒&lt;/a&gt; 」。主博客这边右侧边栏会有到音乐盒的链接。&lt;/p&gt;
&lt;p&gt;曾经在这边的那些歌尽量保持 URL 跳转过去，新的歌词翻译会发到那边去，还想继续听歌的话请继续订阅那边的 RSS 呀。&lt;/p&gt;
&lt;p&gt;主博客这边还是像往常一样保持记录生活点滴和技术经验好了。说道介绍技术，
有人问过我那些日语歌词上给汉字标注的假名都是我一个个手输的么？
一开始是手输的，后来发现了不错的自动化方案，于是这里介绍一下。&lt;/p&gt;
&lt;div class="section" id="python-furigana"&gt;
&lt;h2&gt;首先是　python-furigana&lt;/h2&gt;
&lt;p&gt;这是个 python 写的小程序（严格说是库），可以把一段日文转换成标准的 HTML 形式的
&lt;code class="code"&gt;
&amp;lt;ruby&amp;gt;&lt;/code&gt;
 标签的振假名( &lt;ruby&gt;&lt;rb&gt;振&lt;/rb&gt;&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ふ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; り &lt;ruby&gt;&lt;rb&gt;仮名&lt;/rb&gt;&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;かな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; )。
它本身只是个方便的格式化库，实际工作是用 python-mecab 这个 binding 去查询 mecab
这个著名的日语语料分析库。要用它还得配合一些开源的 mecab 词典，这些在 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;最近几个月在这个博客发了不少歌词翻译 &lt;del&gt;似乎有要转型成音乐博主的趋势&lt;/del&gt; ，前段时间买了个新域名
&lt;a class="reference external" href="https://sak.uy/"&gt;sak.uy&lt;/a&gt; ，准备专门用来放这些东方歌曲的歌词翻译，于是分设了单独的博客「
&lt;a class="reference external" href="https://sak.uy/"&gt;Sakuya的音乐盒&lt;/a&gt; 」。主博客这边右侧边栏会有到音乐盒的链接。&lt;/p&gt;
&lt;p&gt;曾经在这边的那些歌尽量保持 URL 跳转过去，新的歌词翻译会发到那边去，还想继续听歌的话请继续订阅那边的 RSS 呀。&lt;/p&gt;
&lt;p&gt;主博客这边还是像往常一样保持记录生活点滴和技术经验好了。说道介绍技术，
有人问过我那些日语歌词上给汉字标注的假名都是我一个个手输的么？
一开始是手输的，后来发现了不错的自动化方案，于是这里介绍一下。&lt;/p&gt;
&lt;div class="section" id="python-furigana"&gt;
&lt;h2&gt;首先是　python-furigana&lt;/h2&gt;
&lt;p&gt;这是个 python 写的小程序（严格说是库），可以把一段日文转换成标准的 HTML 形式的
&lt;code class="code"&gt;
&amp;lt;ruby&amp;gt;&lt;/code&gt;
 标签的振假名( &lt;ruby&gt;&lt;rb&gt;振&lt;/rb&gt;&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ふ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; り &lt;ruby&gt;&lt;rb&gt;仮名&lt;/rb&gt;&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;かな&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; )。
它本身只是个方便的格式化库，实际工作是用 python-mecab 这个 binding 去查询 mecab
这个著名的日语语料分析库。要用它还得配合一些开源的 mecab 词典，这些在 &lt;code class="code"&gt;
[archlinuxcn]&lt;/code&gt;

都有打好的包了，直接安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo pacman -Syu python-furigana mecab-git python-mecab mecab-ipadic&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;装好之后用法也很直接，甚至没有 binary 直接调用 python 的 module 就可以：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python -m furigana.furigana &lt;span class="s2"&gt;"振り仮名の例"&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;&amp;lt;ruby&amp;gt;&amp;lt;rb&amp;gt;振&amp;lt;/rb&amp;gt;&amp;lt;rt&amp;gt;ふ&amp;lt;/rt&amp;gt;&amp;lt;/ruby&amp;gt;り&amp;lt;ruby&amp;gt;&amp;lt;rb&amp;gt;仮名&amp;lt;/rb&amp;gt;&amp;lt;rt&amp;gt;かめい&amp;lt;/rt&amp;gt;&amp;lt;/ruby&amp;gt;の&amp;lt;ruby&amp;gt;&amp;lt;rb&amp;gt;例&amp;lt;/rb&amp;gt;&amp;lt;rt&amp;gt;れい&amp;lt;/rt&amp;gt;&amp;lt;/ruby&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就是提供日语作为输入，然后输出 HTML 形式的 &lt;code class="code"&gt;
&amp;lt;ruby&amp;gt;&lt;/code&gt;
 标签而已。
像上面的例子中出现的错误（「振り仮名」完整的一个词中「仮名」意思是「平仮名」应该发音「がな」而非意为「假的人名」的「かめい」）
可以看出其实标注的准确率还是有些问题的。嘛日语作为一个非常依赖上下文判断的语言，
经常日本人都会搞错某些汉字的发音，这些也不能强求机械化的算法能 100% 正确实现。
好在单纯的词典匹配也能满足大部分标注的需要了，用这个标注总体来说 95%
以上的情况都是正确的（歌词的话正确率低一些，毕竟歌词中古语啦当て字啦训読み这些情况很常见）。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;把输出插入我的博客&lt;/h2&gt;
&lt;p&gt;然后我的博客用 reStructuredText 语法写，不能直接用 HTML 标签（虽然我加了 &lt;code class="code"&gt;
:html:&lt;/code&gt;

这个 &lt;ruby&gt;&lt;rb&gt;行内角色&lt;/rb&gt;&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;inline role&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 但是大量用也不方便）。这个博客一开始用
&lt;a class="reference external" href="//farseerfc.me/zhs/redesign-pelican-theme.html#bootstrapify-twitter-bootstrap-rst-directives"&gt;Pelican 重写主题的时候&lt;/a&gt;
我就实现了个自己的 &lt;code class="code"&gt;
:ruby:&lt;/code&gt;
&lt;ruby&gt;&lt;rb&gt;行内角色&lt;/rb&gt;&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;inline role&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt; 用来标发音，于是一段
sed 就能把 python-furigana 的输出转换成我用的 rst 语法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; which clipboard Co Ci Ct&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;clipboard: aliased to xclip -selection clipboard&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;Co: aliased to clipboard -o&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;Ci: aliased to clipboard -i&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;Ct () {&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;    t=$(mktemp /tmp/furigana-XXXX)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;    python -m furigana.furigana $(Co) | sed 's@&amp;lt;ruby&amp;gt;&amp;lt;rb&amp;gt;@ :ruby:`@g;s@&amp;lt;/rb&amp;gt;&amp;lt;rt&amp;gt;@|@g;s@&amp;lt;/rt&amp;gt;&amp;lt;/ruby&amp;gt;@` @g' | sponge $t&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;    cat $t | tee /dev/tty | perl -pe 'chomp if eof' | Ci&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这些 alias 在我的 &lt;a class="reference external" href="https://git.io/fczsh"&gt;.bashrc&lt;/a&gt; 中。有了这些之后，
我只要把需要标注的日语文本放入剪切版，执行 Ct ，再粘帖结果就好了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"振り仮名の例"&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; Ci&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="gp"&gt;$&lt;/span&gt; Ct&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="go"&gt;:ruby:`振|ふ` り :ruby:`仮名|かめい` の :ruby:`例|れい`&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后所有那些歌词上标注的假名都是这样一句一句标注好之后，再手动校对修改的。&lt;/p&gt;
&lt;/div&gt;
</content><category term="life"></category></entry></feed>