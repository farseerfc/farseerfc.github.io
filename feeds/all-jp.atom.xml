<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Farseerfc's Blog</title><link href="//farseerfc.github.io/" rel="alternate"></link><link href="//farseerfc.github.io/feeds/all-jp.atom.xml" rel="self"></link><id>//farseerfc.github.io/</id><updated>2013-02-20T20:42:00+09:00</updated><entry><title>嫁になってくれませんか？</title><link href="//farseerfc.github.io/marry-me-jp.html" rel="alternate"></link><updated>2013-02-20T20:42:00+09:00</updated><author><name>farseerfc</name></author><id>tag:farseerfc.github.io,2013-02-20:marry-me-jp.html</id><summary type="html">&lt;html&gt;&lt;head&gt;&lt;script src="static/three.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="static/FirstPersonControls.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="static/helvetiker_regular.typeface.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="static/214game.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/head&gt;&lt;body&gt;&lt;div id="game_area" style="width: 600px; height: 450px; margin-left: 10px;"&gt;
&lt;/div&gt;
&lt;p style="margin-left: 100px; margin-top: 10px; "&gt;* &lt;span class="caps"&gt;WASD&lt;/span&gt;←→ で 移動 する，WebGL が 必要 &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</summary><category term="will"></category><category term="you"></category><category term="marry"></category><category term="me"></category></entry><entry><title>MSR 2012 @ ICSE</title><link href="//farseerfc.github.io/msr2012-jp.html" rel="alternate"></link><updated>2012-06-02T10:42:00+09:00</updated><author><name>farseerfc</name></author><id>tag:farseerfc.github.io,2012-06-02:msr2012-jp.html</id><summary type="html">&lt;html&gt;&lt;body&gt;&lt;div class="section" id="mining-software-repository-2012-icse"&gt;
&lt;h2&gt;Mining Software Repository 2012 @ &lt;span class="caps"&gt;ICSE&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt; 今年 の&lt;span class="caps"&gt;MSR&lt;/span&gt;を 参加 しました、 会場 はチューリッヒ 大学 にあります。 朝早 く 大学 に
 着 いて、 登録 するときちょっと 事情 をありました。スイス 人 は 明 らかに 中国人 
の 名前 をわからないから、３つの 中国 からの 楊 （Yang）の 名札 を 間違 えた。そ
して 堀田先輩 の 名札 に"Japan, Japan"になって、 日本代表 になった。&lt;/p&gt;
&lt;div class="section" id="msr-microsoft-research-talk-msr-mining-software-repositories"&gt;
&lt;h3&gt;&lt;span class="caps"&gt;MSR&lt;/span&gt;(MicroSoft Research) talk @ &lt;span class="caps"&gt;MSR&lt;/span&gt;(Mining Software Repositories)&lt;/h3&gt;
&lt;p&gt;まず 一番目 のKeynoteはマイクロソフトアジア 研究院 (MicroSoft Research @ Asia
,&lt;span class="caps"&gt;MSR&lt;/span&gt; Asia)のZhang 氏 が 発表 する、こうして&lt;span class="caps"&gt;MSR&lt;/span&gt;が&lt;span class="caps"&gt;MSR&lt;/span&gt;に 発表 するになった。&lt;/p&gt;
&lt;p&gt;Zhangの 発表 はSoftware Analysisと&lt;span class="caps"&gt;XIAO&lt;/span&gt;の２つの 紹介 です。&lt;span class="caps"&gt;XIAO&lt;/span&gt;はマイクロソフト
が 開発 したCode Clone Detector、ある 会社 が 私達 に 任 せるのもこのようなシステム です。もっと 詳 しく 知 りたいが、 実装 に 関 わるものは 言 ってなかった。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="towards-improving-bts-with-game-mechanisms"&gt;
&lt;h3&gt;Towards Improving &lt;span class="caps"&gt;BTS&lt;/span&gt; with Game Mechanisms&lt;/h3&gt;
&lt;p&gt;これの 内容 は 基本的 にこのブロクに 書 いています：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.joelonsoftware.com/items/2008/09/15.html"&gt;http://www.joelonsoftware.com/items/2008/09/15.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; 同 じ 理論 をIssue Trackingとかに 応用 できるかを 言 いました。 個人的 にこれは
 意味 ない 気 がします。stackoverflowの 成功 はOpen Software Communityにもと
もとある 名誉 システムを 具現化 したですから、それを 会社 の 中 に 応用 するのは  難 しい 気 がする。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ghtorrent"&gt;
&lt;h3&gt;GHTorrent&lt;/h3&gt;
&lt;p&gt;この 研究 のスライドはこちらに：&lt;a class="reference external" href="http://www.slideshare.net/gousiosg/ghtorrent-githubs-data-from-a-firehose-13184524"&gt;http://www.slideshare.net/gousiosg/ghtorrent-githubs-data-from-a-firehose-13184524&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Data exporter for github. Githubの 主 なデータはコード、それは 既 にgitから
アクセスできます、wikiはgitとして 保存 しているからそれも 含 まれている。
ですからこのプロジェクトの 目的 は 他 のデータを 表 せる、つまりissues, commit
commentsなど。このプロジェクトはgithub apiを 通 じて、 分布 システムとして
apiの 制限 を 超 える、そしてtorrentの 形 で 歴史 をdownloadできます。 元 のデータ はbsonとしてMongoDBの 保存 して、Schemaを 追加 したデータはMySQLに 保存 する。&lt;/p&gt;
&lt;p&gt;わたしの 意見 では、データをgitのrepoの 形 で 保存 するの 方 がいいかもしれない。  今 のwikiのように、そしてgitoliteも 全 てのデータをgit 自身 の 中 に 保存 している。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-evolution-of-software"&gt;
&lt;h3&gt;The evolution of software&lt;/h3&gt;
&lt;p&gt; 二日目 のkeynotes, social mediaをソフトウェア 開発 に 巻 き 込 めるについて
 話 しました。もしかしてこれはGithubの 成功 の 理論 かもしれない。&lt;span class="caps"&gt;IDE&lt;/span&gt;の 中 に
social mediaのアクセスを 欲 しいと 言 いました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="do-faster-releases-imporve-software-quality"&gt;
&lt;h3&gt;Do Faster Releases Imporve Software Quality?&lt;/h3&gt;
&lt;p&gt;Firefoxを 例 として 研究 しました。&lt;/p&gt;
&lt;p&gt; 結論 としては、 早 い 発行 はbugを 多 く 持 たされ、crashがもっと 頻繁 になるが、
bugの 修復 も 早 くなって、そしてユーザー 側 はもっと 早 く 新 しい 発行 に 移動 する ことをわかりました。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="security-vs-performance-bugs-in-firefox"&gt;
&lt;h3&gt;Security vs Performance Bugs in Firefox&lt;/h3&gt;
&lt;p&gt; 性能 に 関 するbugはregression テストが 要 る、そして 発行 を 阻止 する。&lt;/p&gt;
&lt;/div&gt;
&lt;hr class="docutils"/&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt; 思 いつき&lt;/h3&gt;
&lt;div class="section" id="topiccommit"&gt;
&lt;h4&gt;topicに 基 づいてcommitの 分析 と 分割 &lt;/h4&gt;
&lt;p&gt;よく 使 うツール（ 例 えばgit）のユーザーはツールの 設計者 の 意図 を 従 って
ツールを 使 うことはない、 設計者 が 思 った 用途以外 にも 使 っていることが 多 い、
それはMiningに 対 しては 色 々 困難 を 持 たされています。 例 えばgitには 完璧 な
branch 機能 がある、 通常 にgitのユーザーが 一 つのcommitに 一 つの 機能 を 実現 
してほしい、 例 としてはbugの 修復 とか、 機能 の 追加 とか。それは 難 しいなら
branchを 使 って、 一連 のcommitを 一 つのbranchになって、 一 つのbranchに 一 つ
の 機能 を 実現 してほしい。それなのに、 現状 では、 沢山 の 編集 を 一 つのcommit に 含 まれていて、 後 の 管理 とか 情報 の 収集 とかが 困難 になってしまう。&lt;/p&gt;
&lt;p&gt;それはユーザーの 悪 いと 思 わない、ツールの 方 がもっと 頑張 らないとユーザー
は 正 しく 使 えない。もしcommitの 時 、 自動的 にcommitの 内容 を 分析 して、
その 中 にtopicによって 分 けて、ユーザーに 推薦 するのをてきたらいいなぁ、
と 思 っています。このように 一 つのcommitを 多 くに 分割 したら、commitの 履歴  をもっと 見 やすくなって、 続 いて 分析 とかも 便利 になるはずです。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="slide"&gt;
&lt;h4&gt; 今回 に 皆使 っているslideのシステム&lt;/h4&gt;
&lt;p&gt;タイトルは &lt;tt class="docutils literal"&gt;Incorporating Version Histories in Information Retrieval
Based Bug Localization&lt;/tt&gt; の 人 が 使 っているのはbeamerです。 数式 が 多 くて、
overlayも 多 くて，iterateも 多 い、 図 だけ 少 ない、 典型的 にbeamerに 作 れそうな
スライドです。mindmapの 使 いもうまい。 今日 の 一日 に 少 なくとも3 個 のslideは beamerで 作 られています。&lt;/p&gt;
&lt;p&gt;タイトルは &lt;tt class="docutils literal"&gt;Towards Improving Bug Tracking Systems with Game Mechanisms&lt;/tt&gt;
の 人 はpreziを 使 いました、 図 が 多 くて、transitionも 多 い。 但 しスライド
としては 必要 なページ 数 とかがなくて、このような 国際会議 の 場合 にはもっと  工夫 をした 方 がいいかもしれな。&lt;/p&gt;
&lt;p&gt; 少 なくとも 六人以上 はAppleのKeynoteをつかていまう。Keynoteによる 作 った
スライドはPowerpointのになかなか 区別 しがたいですが、その 中 に 二人 は
defaultのthemeを 使 ったからわかります、 他 の 人 は&lt;span class="caps"&gt;PPT&lt;/span&gt;に 決 してありえない アニメションを 使 っていますから、 多分 keynote。&lt;/p&gt;
&lt;p&gt; 残 りは 勿論 Powerpointです。&lt;span class="caps"&gt;MSRA&lt;/span&gt;の 張 さんが 作 ったのはpowerpointなんですけど、
すごくbeamerの 感 じがします、 例 えばheaderとfooterの 使 い 方 とか、overlay
 見 たいのものでページのitemを 一 つずつ 展開 するとか。それらを 全部 powerpoint で 作 るのは 相当手間 がかかりそうです。&lt;/p&gt;
&lt;p&gt;ちなみに 言 いたいのは 一 つタイトルは &lt;tt class="docutils literal"&gt;Green Mining: A Methodology of
Relating Software Change to Power Consumption&lt;/tt&gt; のスライドは 全部  &lt;tt class="docutils literal"&gt; 下手 &lt;/tt&gt;
な 手描 きの 漫画 で 表 せている、 火狐 のアイコンさえ 手描 きする、 効果 は 意外 に
 評判 がいい。 省 エネでグリンで 環境 にいいで 可愛 らしい。 具体的 な 効果 は 下 の リンクから 見 えます、 現場 で 見 たのは 別 のバージョンなんですけど：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://softwareprocess.es/a/greenmining-presentatation-at-queens-20120522.ogv"&gt;http://softwareprocess.es/a/greenmining-presentatation-at-queens-20120522.ogv&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h4&gt;マイクロソフトは 腹黒 っ 子 !&lt;/h4&gt;
&lt;p&gt;まぁ 大 したニュースではないですけど、&lt;span class="caps"&gt;MSR2012&lt;/span&gt;のMining Challengeのスバンサー はマイクロソフトで、 商品 はXboxとKinectですけど、 今年 のチャレンジのテーマは：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Mining Android Bug
&lt;/pre&gt;
&lt;p&gt;マイクロソフトの 殺意 を 感 じしました。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;&lt;/html&gt;</summary><category term="msr"></category><category term="icse"></category><category term="mining"></category><category term="software"></category><category term="repository"></category></entry><entry><title>PyRuby</title><link href="//farseerfc.github.io/mix-ruby-jp.html" rel="alternate"></link><updated>2012-03-02T23:09:00+09:00</updated><author><name>farseerfc</name></author><id>tag:farseerfc.github.io,2012-03-02:mix-ruby-jp.html</id><summary type="html">&lt;html&gt;&lt;body&gt;&lt;p&gt;きょう、Githubに &lt;a class="reference external" href="https://github.com/danielfm/pyruby"&gt;PyRuby&lt;/a&gt; というプロジェクトを 見 ました。それの 説明 にこう 書 いています:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
PyRuby - Some Ruby for your Python!
PyRuby is a simple way to leverage the power of Ruby to make your Python code more readable and beautiful.

Usage
All you have to do is import the ruby module:

import ruby
From now on you should be able to write Ruby code within a regular Python module. An example:

1.upto(10) { |n| puts n }
&lt;/pre&gt;
&lt;p&gt;さらに、 &lt;a class="reference external" href="http://pypi.python.org/pypi/pyruby/1.0.0"&gt;PyPI&lt;/a&gt; にそれのパッケージもあった。&lt;/p&gt;
&lt;p&gt; 最初 に、これはもう 一 つのPyPyで 実現 したRubyだと 思 った。 少 なくとも、 本当 のRubyをPythonから 呼 び 出 すの 何 かの 魔法 も 可能 かもしれない。&lt;/p&gt;
&lt;div class="section" id="ruby-py"&gt;
&lt;h2&gt;それのソースコートはこうなっています。 ruby.py&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"""&lt;/span&gt;

&lt;span class="s"&gt;                              `.-:/+ossyhhddmmmmNNNNNNNmmmmmdddddhhhyyyyhhhyo:`&lt;/span&gt;
&lt;span class="s"&gt;                       .:+sydNNNmmdhhysso++/+++++++////::::::-.```......--/oymms.&lt;/span&gt;
&lt;span class="s"&gt;                  `:ohmdys+//::/::--::::////:-.```......`````.://:-`         `/dNs.&lt;/span&gt;
&lt;span class="s"&gt;               .+hNds:`-:-:///::------::///++///:--....--::///::-`.///.        `oMm/&lt;/span&gt;
&lt;span class="s"&gt;             /hNmo.`   ``    `....```````````      ...------:::-:/+/-.:/:`       /NMs&lt;/span&gt;
&lt;span class="s"&gt;            oMd/`      `::::--.---://+`           //`     `````-:::::+/-`::.`     :NM+&lt;/span&gt;
&lt;span class="s"&gt;            yN`       -+.`         `/`           o.               ``::.-:. ``      :NN:&lt;/span&gt;
&lt;span class="s"&gt;           :Nm        -             ./           :    `.-://///:-.   `-` ``         :NN-&lt;/span&gt;
&lt;span class="s"&gt;          /NM/           .-:::-.`   `/            `:sdmdhyMMMMMMNNmy/`               :mNo`&lt;/span&gt;
&lt;span class="s"&gt;        :hMd:          /dmddddNNmdy+-.          `smmy/-```hMMMMMMMhydm/ `-.``     `...:mMm+.&lt;/span&gt;
&lt;span class="s"&gt;      -hNd/-/o/-..-::`.ydmmmmNMMMMMMNh:/+-      dMN-`-+hmmmmdhhhhdddmMN-`-/o:    .-::::/oydms-&lt;/span&gt;
&lt;span class="s"&gt;     oNMo:+/::.         ``...--:/+ohNMNhs-      :hNmmdyo:..``yo-```.--. `-`-+shdddhs+-` `.//yms.&lt;/span&gt;
&lt;span class="s"&gt;    .MMo:/`o:.:+sso+:-`             sM+           ./-`       /mNh+-....-/ymNNdo::--/shd+`  -`:mm:&lt;/span&gt;
&lt;span class="s"&gt;    /MM-o ./ ohhsooohNmy::sh.      `yM/                       `:oyyyyyyhys+:.` hy    `/Nh`  : -NN.&lt;/span&gt;
&lt;span class="s"&gt;    -MM// -: ``   y: odddhh+     -omNh-          `--.` ``          ````    .:ohMMs.    +Ms  /  yMo&lt;/span&gt;
&lt;span class="s"&gt;     hMoo .+.    :Mh  ````    `/hNd/.`           ohdddy::...`..`      `-/sdmdyo+NMNh+- :Mh  /  sMs&lt;/span&gt;
&lt;span class="s"&gt;     .mmh:..:.  :NMm       `-/dMNM+         ./+++/:`.hM:`.````.` `-/shmNmh+-`  /Mmooso.hM/ .: `mM/&lt;/span&gt;
&lt;span class="s"&gt;      .mNs://: .NMNMs-   -:-.`/+-sms.   `  `shyyyhy`sNd`   `.:+sdmmmdMM-.    .oNM+    :m/ `s``yMh&lt;/span&gt;
&lt;span class="s"&gt;       -mMo  . sMNdMNNh+-.        .ydyoyy`        ``+o::+shdddhs+:-.:MM.`.-+hNMMh-    `.`-/::dNs`&lt;/span&gt;
&lt;span class="s"&gt;        -NM-   mMMMh:MMdNmhs+:-..```-ohs-`...-:/+syhddmMMs:-.`    `/mMMdmmddNMm+`      ..-/hNh-&lt;/span&gt;
&lt;span class="s"&gt;         sMy   NMMM`:Mh`-/mMmmmdddddddddhhhdNNdhyo+:--.yMs  `..:+ymMMMMd+--yNh.        `+hNh:&lt;/span&gt;
&lt;span class="s"&gt;         -Mm   NMMM/yMh  -NM-`..--:NMo:--.`+My         :MNoydmNMMNmhdMh` -dNs`        `yMd:&lt;/span&gt;
&lt;span class="s"&gt;         `MN   mMMMMMMMyshMN+:---.-MN-.....+My...-:/oyhdMMMMNmdy+-` +Mh:sNm/          yMy`&lt;/span&gt;
&lt;span class="s"&gt;          MN   yMMMMMMMMMMMMMMMMMNMMMMNNNNNMMMNNNMMMMMNmhMM/-.      `yMMNs.          /My&lt;/span&gt;
&lt;span class="s"&gt;         `MN   :MMmMMMMMMMMMMMMMMMMMMMMMMMMMMMMNmmdy+:-``NM-      ./hNNy-           /Nd`&lt;/span&gt;
&lt;span class="s"&gt;         -Mh    dMydMmsNMNdNNMMmmmNMMMdddhys+yMo``       /Nm:  `:yNNdo.           .sNd.&lt;/span&gt;
&lt;span class="s"&gt;         +Ms    .mMsMN::NN:.:MN: `.+NM.      +Mo          +Mm+ymNdo-            .omm+`&lt;/span&gt;
&lt;span class="s"&gt;         yM:     .hNMd+:sMN. oMm.   oMo      +Mh   ```.:+shMNmy+-``.-:-..-//-`:yNmo`&lt;/span&gt;
&lt;span class="s"&gt;         mM.       :ohmNNMMdhyMMdo//+Mm//////sMNhyhhdmNNmhs/-``./+/:--+so/-:smNy/`&lt;/span&gt;
&lt;span class="s"&gt;        .Mm        ``  .-:/+osyyhhddddddddddhhyysoo+/:-.  `./+//--+oo/--+ymmy/.&lt;/span&gt;
&lt;span class="s"&gt;        :Mh   .:   `+:`        `.------------`      ```-////:/++/:../ydNdo:`&lt;/span&gt;
&lt;span class="s"&gt;        +Ms   `/`    :+o+:-```              ``..-::///++///:-.`-+ydNdo:`&lt;/span&gt;
&lt;span class="s"&gt;        oMs     :/:.``  `..---.``` ````````..-:/:::---.`  `-ohmmh+:`&lt;/span&gt;
&lt;span class="s"&gt;        /Mh       .://///:::-----.-----.......`       `-+hmmy+-&lt;/span&gt;
&lt;span class="s"&gt;         sMy`                                ``````-+ydmy+-&lt;/span&gt;
&lt;span class="s"&gt;          /mNs-`                        `./ohmNMNNNmy+-&lt;/span&gt;
&lt;span class="s"&gt;            /yNmho/:.``````````.-:/+syhdNmdyso+/-.`&lt;/span&gt;
&lt;span class="s"&gt;              `:+ydmNMNNNNNNNNNmdhys+/:.`&lt;/span&gt;
&lt;span class="s"&gt;                     ``.....`&lt;/span&gt;

&lt;span class="s"&gt;    LOL U MAD?&lt;/span&gt;
&lt;span class="s"&gt;"""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 本当 だ、Pythonの 中 にRubyを 呼 び 出 すという 考 えはアホだ。&lt;/p&gt;
&lt;/div&gt;
&lt;/body&gt;&lt;/html&gt;</summary><category term="python"></category><category term="ruby"></category></entry><entry><title>Pelicanを試してみた</title><link href="//farseerfc.github.io/try-pelican-jp.html" rel="alternate"></link><updated>2012-02-24T17:33:00+09:00</updated><author><name>farseerfc</name></author><id>tag:farseerfc.github.io,2012-02-24:try-pelican-jp.html</id><summary type="html">&lt;html&gt;&lt;body&gt;&lt;p&gt; 一日 の 間 に 全 ての
&lt;a class="reference external" href="http://blog.yxwang.me/2011/11/migrated-to-octopress/"&gt;ギーク&lt;/a&gt;
&lt;a class="reference external" href="http://xoyo.name/2012/02/migrate-to-octopress/"&gt;たち&lt;/a&gt;
&lt;a class="reference external" href="http://blog.xdite.net/posts/2011/10/07/what-is-octopress/"&gt;が&lt;/a&gt;
&lt;a class="reference external" href="http://www.yangzhiping.com/tech/octopress.html"&gt; 自分 の&lt;/a&gt;
&lt;a class="reference external" href="http://pages.github.com/#user__organization_pages"&gt;Githubユーザーページ&lt;/a&gt;
と &lt;a class="reference external" href="http://octopress.org/"&gt;Octopress&lt;/a&gt; ブログを 導入 したような 気 がします。 皆 がブログに 書 いた 通 りに、 静的 ブログは 確 かに WordPress
などの 従来 の 動的 ブログ・エンジンより 便利 だと 思 います。これらブログを 見 ると、 私 も 自分 の &lt;a class="reference external" href="http://octopress.org/"&gt;Octopress&lt;/a&gt; ブログを 立 ちましょう とずっと 思 っています。&lt;/p&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;ですが &lt;a class="reference external" href="http://octopress.org/"&gt;Octopress&lt;/a&gt; は 私 に 向 いてないかも&lt;/h2&gt;
&lt;p&gt; 初 めのところに &lt;a class="reference external" href="http://octopress.org/docs/setup/"&gt;Octopressの 配置手順 &lt;/a&gt; に 迷 わされた。
&lt;a class="reference external" href="http://beginrescueend.com/"&gt;&lt;span class="caps"&gt;RVM&lt;/span&gt;&lt;/a&gt; とはなに？ &lt;a class="reference external" href="https://github.com/sstephenson/rbenv"&gt;rbenv&lt;/a&gt; とは 何 のこと？ 見 るところ Ruby コミュニティーの 発展 するハイペースは 既 に 私 の 想像 に 超 えましたみたい。
 彼 らは Ruby の 各 バージョン 間 に 互換性 を 持 つために、バージョン 管理 が 必要 らしいです。 同様 の 互換性問題 が Python コミュニティーにもある
ですが &lt;a class="footnote-reference" href="#id10" id="id8"&gt;[1]&lt;/a&gt; 、 Python は 今 のところこのようなバージョン 管理 の 必要 がないと 思 います &lt;a class="footnote-reference" href="#id11" id="id9"&gt;[2]&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt; 実際 に 迷惑 したのは、 私 は 今自由 に 持 って 遊 べる Linux  環境 が 持 っていないということ（ほしいなぁ……）。 ですが &lt;a class="reference external" href="http://beginrescueend.com/"&gt;&lt;span class="caps"&gt;RVM&lt;/span&gt;&lt;/a&gt; それとも &lt;a class="reference external" href="https://github.com/sstephenson/rbenv"&gt;rbenv&lt;/a&gt;  両方 も Unix/Linux/MacOSX しか 実行 できないらしいです。ギークとしたの 皆 は 絶対 に Windows つかっじゃいけないんですか？（ 本当 かも……）。&lt;/p&gt;
&lt;p&gt; 残 りは Ruby と Python の 争 いです。 私 は &lt;a class="reference external" href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; に 詳 しくない、 比 べると &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;ReST&lt;/a&gt; のほうが 私 に 向 いています。それに、どっちでも &lt;a class="reference external" href="http://pygments.org/"&gt;Pygments&lt;/a&gt; を 依存 しシンタックス・ハイライトをしているから、 Rubyist  達 も 少 なくとも Python を 入 れなきゃダメみたいです。  私 の 好 みは 一切 の Ruby コンポーネントを 頼 らず、 C  拡張 もない 純粋 な Python の 実現 がほしいです。&lt;/p&gt;
&lt;p&gt;そこから Github に Python で 実現 した 静的 ブログ・エンジンを 探 し 始 めた。 &lt;a class="reference external" href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; の 作者 である &lt;a class="reference external" href="https://github.com/mitsuhiko"&gt;mitsuhiko&lt;/a&gt;  氏 が 書 いた &lt;a class="reference external" href="https://github.com/mitsuhiko/rstblog"&gt;rstblog&lt;/a&gt; が 素晴 らしいが、あんまり 他人 に 使 われていないようです。 &lt;a class="reference external" href="http://ringce.com/hyde"&gt;Hyde&lt;/a&gt; は 多 く 使 われているけれと、ホームページにブログの 感 じがみえないです。 最後 に &lt;a class="reference external" href="http://pelican.notmyidea.org/en/latest/"&gt;Pelican&lt;/a&gt; を 見 かけました。&lt;/p&gt;
&lt;table class="footnote docutils table-hover  table-striped table" frame="void" id="id10" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id8"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt; 例 えば Python 2.x と 3.x の 間 にあまりにも 巨大 なる 差 、それと &lt;a class="reference external" href="http://pypy.org/"&gt;PyPy&lt;/a&gt; 、 &lt;a class="reference external" href="http://python.org/"&gt;CPython&lt;/a&gt; 、 &lt;a class="reference external" href="http://www.stackless.com/"&gt;Stackless&lt;/a&gt; 、 &lt;a class="reference external" href="http://cython.org/"&gt;Cython&lt;/a&gt; など 各実現間 に 微妙 な 違 いがあります。&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="footnote docutils table-hover  table-striped table" frame="void" id="id11" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id9"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;はい、こっちに &lt;a class="reference external" href="http://packages.python.org/distribute/easy_install.html"&gt;easy_install&lt;/a&gt; とか &lt;a class="reference external" href="http://www.pip-installer.org/en/latest/index.html"&gt;pip&lt;/a&gt; があります、ですがそれらはパッケージ 管理 、 特定 なPython 環境 を 入 れた 後 の 話 です。Python 自身 はまだ 管理 する 必要 がないです。 Python のバージョン 問題 も &lt;a class="reference external" href="http://docs.python.org/release/3.0.1/library/2to3.html"&gt;2to3.py&lt;/a&gt; とか &lt;a class="reference external" href="http://www.startcodon.com/wordpress/?cat=8"&gt;3to2.py&lt;/a&gt; のようなツールで 変換 すればいいです、 違 うソフトを 実行 するためたくさんの Python バージョンを 残 る 必要 はないです。もしバージョンの 違 いが 気 にするなら &lt;a class="reference external" href="http://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt; を 使 うのも 構 わないが、それも 別 のことです。&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h2&gt;それでは &lt;a class="reference external" href="http://pelican.notmyidea.org/en/latest/"&gt;Pelican&lt;/a&gt; にしよう&lt;/h2&gt;
&lt;p&gt; 私自身 にとって、 &lt;a class="reference external" href="http://pelican.notmyidea.org/en/latest/"&gt;Pelican&lt;/a&gt; は &lt;a class="reference external" href="http://octopress.org/"&gt;Octopress&lt;/a&gt; よりいいところ：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt; 純粋 な Python で 実現 した。ですから &lt;a class="reference external" href="http://python.org/"&gt;CPython&lt;/a&gt; のほかべつの 実現 を 使 うのも 心配 がない。 例 えばわたしは &lt;a class="reference external" href="http://pypy.org/"&gt;PyPy&lt;/a&gt;　を 使 ています。&lt;/li&gt;
&lt;li&gt; 多言語 。&lt;a class="reference external" href="http://pelican.notmyidea.org/en/latest/"&gt;Pelican&lt;/a&gt; の 原作者 はフランス 人 らしいです。ほとんどの 人 はこれの 必要 がないと 思 うが……できるだけ、わたしは 三 つの 言語 で 書 く。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;ReST&lt;/a&gt; 。それなら &lt;a class="reference external" href="http://webpages.charter.net/edreamleo/front.html"&gt;Leo&lt;/a&gt; の &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;@auto-rst&lt;/span&gt;&lt;/tt&gt; を 使 って 直接  &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;ReST&lt;/a&gt; をかけます。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;でも &lt;a class="reference external" href="http://pelican.notmyidea.org/en/latest/"&gt;Pelican&lt;/a&gt; は &lt;a class="reference external" href="http://octopress.org/"&gt;Octopress&lt;/a&gt; のほど 注目 されていないから、 一部問題 があります。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;pelican-import は WordPress から 導入 する 時 、 日本語 や 中国語 は 問題 となります。&lt;/li&gt;
&lt;li&gt; 多言語 の 機能 と 日付 、タイムゾーンなどにバグがある。  &lt;strong&gt; 私 は 改善 しています。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;テンプレートは 少 ない。&lt;/li&gt;
&lt;li&gt;プラグインも 少 ない……&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;こんなに 優 れたツールにもっと 注目 されてほしい。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h2&gt; 配置 &lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pelican.notmyidea.org/en/latest/"&gt;Pelican&lt;/a&gt; を 入 れるのは 簡単 ：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install pelican
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 文章 を &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;ReST&lt;/a&gt; で 書 いて、 &lt;tt class="docutils literal"&gt;posts&lt;/tt&gt; フォルダーに 置 きます。ページを 生成 する：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pelican -s settings.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Github　に 送 る:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git commit -am &lt;span class="s2"&gt;"Commit message"&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; git push
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; 私 の 配置 ファイル：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Asia/Tokyo'&lt;/span&gt;

&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'en'&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="s"&gt;'usa'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'%a, &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %b %Y'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'zh'&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="s"&gt;'chs'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;, %a'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'jp'&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="s"&gt;'jpn'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'%Y 年 %m 月 &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; 日 (%a)'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;# windows locale: http://msdn.microsoft.com/en-us/library/cdax410z%28VS.71%29.aspx&lt;/span&gt;
&lt;span class="n"&gt;LOCALE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'usa'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'chs'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'jpn'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="c"&gt;# windows&lt;/span&gt;
          &lt;span class="s"&gt;'en_US'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'zh_CN'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'ja_JP'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c"&gt;# Unix/Linux&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'zh'&lt;/span&gt;

&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Farseerfc Blog'&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Jiachen Yang'&lt;/span&gt;

&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'farseerfcgithub'&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://github.com/farseerfc'&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'http://farseerfc.github.com'&lt;/span&gt;
&lt;span class="n"&gt;TAG_FEED&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.atom.xml'&lt;/span&gt;

&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;'twitter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://twitter.com/farseerfc'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'github'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'https://github.com/farseerfc'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'facebook'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://www.facebook.com/farseerfc'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'weibo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://weibo.com/farseerfc'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'renren'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'http://www.renren.com/farseer'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;TWITTER_USERNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'farseerfc'&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'notmyidea'&lt;/span&gt;
&lt;span class="n"&gt;CSS_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"wide.css"&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Others'&lt;/span&gt;
&lt;span class="n"&gt;OUTPUT_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'.'&lt;/span&gt;
&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'posts'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;&lt;/html&gt;</summary><category term="python"></category><category term="pelican"></category></entry><entry><title>“…if we do this work … ” —Bill Gates</title><link href="//farseerfc.github.io/if-we-do-this-work-jp.html" rel="alternate"></link><updated>2011-03-14T20:34:00+09:00</updated><author><name>farseerfc</name></author><id>tag:farseerfc.github.io,2011-03-14:if-we-do-this-work-jp.html</id><summary type="html">&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;a class="reference external" href="http://blog.renren.com/blog/230263946/716517729"&gt;renren&lt;/a&gt; から 導入 した。&lt;/p&gt;
&lt;p&gt;From: Bill Gates&lt;/p&gt;
&lt;p&gt;’— Sent: Sunday, January 24, 1999 8:41 &lt;span class="caps"&gt;AM&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Jeff Westorinon; Ben Fathi ;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;TO&lt;/span&gt;: Carl Stork (Exchange); Nathan Myhrvofd; Eric Rudder&lt;/p&gt;
&lt;p&gt;Subject: &lt;span class="caps"&gt;ACPI&lt;/span&gt; extensions&lt;/p&gt;
&lt;p&gt;One thing I find myself wondering about is whether we shouldn’t try and
make the "&lt;span class="caps"&gt;ACPI&lt;/span&gt;" extensions somehow Windows specific.&lt;/p&gt;
&lt;p&gt;It seems unfortunate if we do this work and get our partners to do the
work and the result is that &lt;strong&gt;Linux works great without having to do the work&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maybe there is no way to avoid this problem but it does bother me.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Maybe we could define the APIs so that they work well with &lt;span class="caps"&gt;NT&lt;/span&gt; and not
the others even if they are open.&lt;/p&gt;
&lt;p&gt;Or maybe we could patent something relaled to this.&lt;/p&gt;
&lt;p&gt;From:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://antitrust.slated.org/www.iowaconsumercase.org/011607/3000/PX03020.pdf"&gt;http://antitrust.slated.org/www.iowaconsumercase.org/011607/3000/&lt;span class="caps"&gt;PX03020&lt;/span&gt;.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;もしこれは 今更 Xen4.0の 上 に&lt;span class="caps"&gt;ACPI&lt;/span&gt; 3.0 完全的 なサポートが 得 ない 原因 、ならBill Gatesを 呪 います！&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;</summary><category term="microsoft"></category><category term="linux"></category><category term="acpi"></category></entry></feed>