<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Farseerfcの居場所</title><link href="//farseerfc.me/jp/" rel="alternate"></link><link href="//farseerfc.me/feeds/tag-msr.atom.xml" rel="self"></link><id>//farseerfc.me/jp/</id><updated>2012-06-02T10:42:00+09:00</updated><entry><title>MSR 2012 @ ICSE</title><link href="//farseerfc.me/jp/msr2012.html" rel="alternate"></link><updated>2012-06-02T10:42:00+09:00</updated><author><name>farseerfc</name></author><id>tag:farseerfc.me,2012-06-02:jp/msr2012.html</id><summary type="html">&lt;html&gt;&lt;body&gt;
&lt;div class="section" id="mining-software-repository-2012-icse"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Mining Software Repository 2012 @ ICSE&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; 今年の MSR を参加しました、会場はチューリッヒ大学にあります。朝早く大学に着いて、登録するときちょっと事情をありました。スイス人は明らかに中国人の名前をわからないから、３つの中国からの楊（ Yang ）の名札を間違えた。そして堀田先輩の名札に "Japan, Japan" になって、日本代表になった。 &lt;/p&gt;
&lt;div class="section" id="msr-microsoft-research-talk-msr-mining-software-repositories"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id4"&gt;MSR(MicroSoft Research) talk @ MSR(Mining Software Repositories)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; まず一番目の Keynote はマイクロソフトアジア研究院 (MicroSoft Research @ Asia
,MSR Asia) の Zhang 氏が発表する、こうして MSR が MSR に発表するになった。 &lt;/p&gt;
&lt;p&gt;Zhang の発表は Software Analysis と XIAO の２つの紹介です。 XIAO はマイクロソフトが開発した Code Clone Detector 、ある会社が私達に任せるのもこのようなシステムです。もっと詳しく知りたいが、実装に関わるものは言ってなかった。 &lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="towards-improving-bts-with-game-mechanisms"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id5"&gt;Towards Improving BTS with Game Mechanisms&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; これの内容は基本的にこのブロクに書いています： &lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.joelonsoftware.com/items/2008/09/15.html"&gt;http://www.joelonsoftware.com/items/2008/09/15.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; 同じ理論を Issue Tracking とかに応用できるかを言いました。個人的にこれは意味ない気がします。 stackoverflow の成功は Open Software Community にもともとある名誉システムを具現化したですから、それを会社の中に応用するのは難しい気がする。 &lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ghtorrent"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id6"&gt;GHTorrent&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; この研究のスライドはこちらに： &lt;a class="reference external" href="http://www.slideshare.net/gousiosg/ghtorrent-githubs-data-from-a-firehose-13184524"&gt;http://www.slideshare.net/gousiosg/ghtorrent-githubs-data-from-a-firehose-13184524&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Data exporter for github. Github の主なデータはコード、それは既に git からアクセスできます、 wiki は git として保存しているからそれも含まれている。ですからこのプロジェクトの目的は他のデータを表せる、つまり issues, commit
comments など。このプロジェクトは github api を通じて、分布システムとして api の制限を超える、そして torrent の形で歴史を download できます。元のデータは bson として MongoDB の保存して、 Schema を追加したデータは MySQL に保存する。 &lt;/p&gt;
&lt;p&gt; わたしの意見では、データを git の repo の形で保存するの方がいいかもしれない。今の wiki のように、そして gitolite も全てのデータを git 自身の中に保存している。 &lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-evolution-of-software"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;The evolution of software&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; 二日目の keynotes, social media をソフトウェア開発に巻き込めるについて話しました。もしかしてこれは Github の成功の理論かもしれない。 IDE の中に social media のアクセスを欲しいと言いました。 &lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="do-faster-releases-imporve-software-quality"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id8"&gt;Do Faster Releases Imporve Software Quality?&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Firefox を例として研究しました。 &lt;/p&gt;
&lt;p&gt; 結論としては、早い発行は bug を多く持たされ、 crash がもっと頻繁になるが、 bug の修復も早くなって、そしてユーザー側はもっと早く新しい発行に移動することをわかりました。 &lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="security-vs-performance-bugs-in-firefox"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id9"&gt;Security vs Performance Bugs in Firefox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt; 性能に関する bug は regression  テストが要る、そして発行を阻止する。 &lt;/p&gt;
&lt;/div&gt;
&lt;hr class="docutils"/&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id10"&gt; 思いつき &lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="topiccommit"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id11"&gt;topic に基づいて commit の分析と分割 &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; よく使うツール（例えば git ）のユーザーはツールの設計者の意図を従ってツールを使うことはない、設計者が思った用途以外にも使っていることが多い、それは Mining に対しては色々困難を持たされています。例えば git には完璧な branch 機能がある、通常に git のユーザーが一つの commit に一つの機能を実現してほしい、例としては bug の修復とか、機能の追加とか。それは難しいなら branch を使って、一連の commit を一つの branch になって、一つの branch に一つの機能を実現してほしい。それなのに、現状では、沢山の編集を一つの commit
 に含まれていて、後の管理とか情報の収集とかが困難になってしまう。 &lt;/p&gt;
&lt;p&gt; それはユーザーの悪いと思わない、ツールの方がもっと頑張らないとユーザーは正しく使えない。もし commit の時、自動的に commit の内容を分析して、その中に topic によって分けて、ユーザーに推薦するのをてきたらいいなぁ、と思っています。このように一つの commit を多くに分割したら、 commit の履歴をもっと見やすくなって、続いて分析とかも便利になるはずです。 &lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="slide"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id12"&gt; 今回に皆使っている slide のシステム &lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; タイトルは &lt;/p&gt;&lt;pre&gt;
Incorporating Version Histories in Information Retrieval
Based Bug Localization&lt;/pre&gt;
  の人が使っているのは beamer です。数式が多くて、 overlay も多くて， iterate も多い、図だけ少ない、典型的に beamer に作れそうなスライドです。 mindmap の使いもうまい。今日の一日に少なくとも 3 個の slide は beamer で作られています。 &lt;p&gt; タイトルは &lt;/p&gt;&lt;pre&gt;
Towards Improving Bug Tracking Systems with Game Mechanisms&lt;/pre&gt;

 の人は prezi を使いました、図が多くて、 transition も多い。但しスライドとしては必要なページ数とかがなくて、このような国際会議の場合にはもっと工夫をした方がいいかもしれな。 &lt;p&gt; 少なくとも六人以上は Apple の Keynote をつかていまう。 Keynote による作ったスライドは Powerpoint のになかなか区別しがたいですが、その中に二人は default の theme を使ったからわかります、他の人は PPT に決してありえないアニメションを使っていますから、多分 keynote 。 &lt;/p&gt;
&lt;p&gt; 残りは勿論 Powerpoint です。 MSRA の張さんが作ったのは powerpoint なんですけど、すごく beamer の感じがします、例えば header と footer の使い方とか、 overlay
 見たいのものでページの item を一つずつ展開するとか。それらを全部 powerpoint
 で作るのは相当手間がかかりそうです。 &lt;/p&gt;
&lt;p&gt; ちなみに言いたいのは一つタイトルは &lt;/p&gt;&lt;pre&gt;
Green Mining: A Methodology of
Relating Software Change to Power Consumption&lt;/pre&gt;
  のスライドは全部 &lt;pre&gt;
 下手 &lt;/pre&gt;

 な手描きの漫画で表せている、火狐のアイコンさえ手描きする、効果は意外に評判がいい。省エネでグリンで環境にいいで可愛らしい。具体的な効果は下のリンクから見えます、現場で見たのは別のバージョンなんですけど： &lt;p&gt;&lt;a class="reference external" href="http://softwareprocess.es/a/greenmining-presentatation-at-queens-20120522.ogv"&gt;http://softwareprocess.es/a/greenmining-presentatation-at-queens-20120522.ogv&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id13"&gt; マイクロソフトは腹黒っ子 !&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt; まぁ大したニュースではないですけど、 MSR2012 の Mining Challenge のスバンサーはマイクロソフトで、商品は Xbox と Kinect ですけど、今年のチャレンジのテーマは： &lt;/p&gt;
&lt;pre class="literal-block"&gt;
Mining Android Bug
&lt;/pre&gt;
&lt;p&gt; マイクロソフトの殺意を感じしました。 &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;&lt;/html&gt;</summary><category term="msr"></category><category term="icse"></category><category term="mining"></category><category term="software"></category><category term="repository"></category></entry></feed>